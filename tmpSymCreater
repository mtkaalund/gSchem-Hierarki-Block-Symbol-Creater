#!/usr/bin/env python

def add_to( string ):
	return " " + str(string)

class SymbolDraw:
	_capstyle  = ["none","square","round"]
	_dashstyle = ["solid","dotted","dashed","center","phantom"]
	_filltype  = ["hollow","fill","mesh","hatch","void"]

	def add_version(self):
		_version = "20110115"
		return "v " + _version + " 2\n"
	

	def box(self, x, y, w, h, c, linewidth, capstyle, dashstyle, dashlength, dashspace, filltype, fillwidth, argle1, pitch1, angle2, pitch2):
		sout = "B" + add_to(x) + add_to(y) + add_to(w)
		sout = sout + add_to(h)+ add_to(c) + add_to(linewidth)
		sout = sout + add_to(capstyle)

		# if dashstyle is not used for SOLID and DOTTED
		if dashstyle == 0 or dashstyle == 1:
			dashlength = -1
			if dashstyle == 0:
				dashspace  = -1
		sout = sout + add_to(dashstyle) + add_to(dashlength)
		sout = sout + add_to(dashspace) + add_to(filltype)
		
		if filltype == 0:
			fillwidth = -1
			angle1 = -1
			angle2 = -1
			pitch1 = -1
			pitch2 = -1
		
		sout = sout + add_to(fillwidth) + add_to(angle1)
		sout = sout + add_to(pitch1) + add_to(angle2)
		sout = sout + add_to(pitch2) 

		return sout + '\n'

	def pin(self, x1, y1, x2, y2, color, pintype, whichend):
		sout = "P" + add_to(x1) + add_to(y1) + add_to(x2)
		sout = sout + add_to(y2) + add_to(color)
		sout = sout + add_to(pintype) + add_to(whichend)
		return sout + '\n'

	def text(self, x, y, color, size, visibility, shown_name_value, angle, alignment, num_lines, strings):
		sout = "T" + add_to(x) + add_to(y) + add_to(color)
		sout = sout + add_to(size) + add_to(visibility)
		sout = sout + add_to(shown_name_value) 
		
		if angle in [0,90,180,270]:
			sout = sout + add_to(angle)
		else:
			sout = sout + add_to(0)

		if alignment in range(0,8):
			sout = sout + add_to(alignment)
		else:
			sout = sout + add_to(0)

		if num_lines == 0:
			sout = sout + add_to(1) + '\n'
		else:
			sout = sout + add_to(num_lines) + '\n'

		for entry in strings:
			sout = sout + entry + '\n'

		return sout

if __name__ == "__main__":
	print "This is an test, of how to create a gschem symbol"
	obj = SymbolDraw()
	print obj.add_version(),
	print obj.box(33000,67300, 2000, 2000, 3, 60, 0, 2, 75, 50, 0, 1, 1, 1,1,1),
	print obj.pin(0,200,200,1,0,0,0)
	print obj.tekst(16900, 35800,3,10,1,0,0,0,5,["text string line 1", "text string line 2", "text string line 3", "text string line 4", "text string line 5"])
	print "done"

# Notes:
# Pins should all be 300 mils long.
# and 400 mils between vertically pins.

